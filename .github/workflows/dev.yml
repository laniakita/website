name: Dev Build Action
run-name: ${{github.actor}} is building for dev
on: 
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
env:
  CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
jobs:
  SST-Deploy-Dev:
    if: ${{ github.ref == 'refs/heads/main' }}
    environment: dev
    runs-on: ubuntu-latest
    steps:
      # info
      - run: echo "Deploying build from branch ${{ github.ref_name }} to dev"
      - run: echo "Build triggered by ${{ github.event_name }}"
      - run: echo "Building on ${{ runner.os }}"

      # fetch repo
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: echo "Checked out ${{ github.repository }}"

      # aws
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true
    
      - name: Add AWS profile to ~/.aws/credentials
        run: |
          aws configure set region ${{ secrets.AWS_REGION }} --profile lani-dev
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile lani-dev
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile lani-dev
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile lani-dev
      
      # Setup Bun
      - name: Setup bun 
        uses: oven-sh/setup-bun@v2
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ${{ github.workspace }}/apps/*/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-

      - name: install packages
        run: bun install

      # ROTFB
      - name: Deploy
        run: bun run deploy:dev
        timeout-minutes: 30
