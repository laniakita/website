/* eslint-disable react/no-unknown-property -- jsx-eslint compatibility issues with r3f */
/*

Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Kaine_G (https://sketchfab.com/Kaine_G)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/blahaj-ce981de49111488c81ea646067abe1ec
Title: Blahaj
*/

import { useGLTF } from '@react-three/drei';
import type { GLTF } from 'three-stdlib';
import type { BufferGeometry, InstancedMesh, Mesh, MeshStandardMaterial } from 'three';
import type { InstancedRigidBodyProps } from '@react-three/rapier';
import { InstancedRigidBodies } from '@react-three/rapier';
import { useMemo } from 'react';

type GLTFResult = GLTF & {
  nodes: {
    Low_poly_blahaj1_Shark_0: Mesh;
    Low_poly_blahaj1_teef_0: Mesh;
  };
  materials: {
    Shark: MeshStandardMaterial;
    teef: MeshStandardMaterial;
  };
};

export function ShorkMesh(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/models/blahaj-transformed.glb') as GLTFResult;
  return (
    <group position={[0.03684668, 0, 0.09937105]} rotation={[0, 0.71016491, 0]} {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Low_poly_blahaj1_Shark_0.geometry} material={materials.Shark} />
      <mesh castShadow receiveShadow geometry={nodes.Low_poly_blahaj1_teef_0.geometry} material={materials.teef} />
    </group>
  );
}

/* Work in Progress */

const COUNT = 80;

export function InstancedShorks() {
  const { nodes, materials } = useGLTF('/assets/models/blahaj-transformed.glb') as GLTFResult;
  const instances = useMemo(() => {
    const instancesI: InstancedRigidBodyProps[] = [];
    for (let i = 0; i < COUNT; i++) {
      instancesI.push({
        key: `instance_${Math.random()}`,
        position: [Math.random() * 10, Math.random() * 10, Math.random() * 10],
        rotation: [Math.random(), Math.random(), Math.random()],
      });
    }
    return instancesI;
  }, []);

  return (
    <InstancedRigidBodies instances={instances} colliders='hull'>
      <instancedMesh
        args={[nodes.Low_poly_blahaj1_Shark_0 as unknown as BufferGeometry, materials.Shark, 1]}
        castShadow
        receiveShadow
        instanceMatrix={(nodes.Low_poly_blahaj1_Shark_0 as InstancedMesh).instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Low_poly_blahaj1_teef_0 as unknown as BufferGeometry, materials.Shark, 1]}
        castShadow
        receiveShadow
        instanceMatrix={(nodes.Low_poly_blahaj1_teef_0 as InstancedMesh).instanceMatrix}
      />
    </InstancedRigidBodies>
  );
}

// used for both
useGLTF.preload('/assets/models/blahaj-transformed.glb');
