/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 bot_zun_animation_by_oscar_creativo.glb -t -s -I -D 
Files: bot_zun_animation_by_oscar_creativo.glb [12.93MB] > /home/lani/Development/ahiakea/apps/laniakita-com/public/assets/tmp-gltf/bot_zun_animation_by_oscar_creativo-transformed.glb [1.4MB] (89%)
Author: OSCAR CREATIVO (https://sketchfab.com/oscar_creativo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bot-zun-animation-by-oscar-creativo-c0e0b640363345fa9ac0973d90537978
Title: BOT ZUN ANIMATION by Oscar Creativo
*/

import * as THREE from 'three'
import React, { useRef, useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    MANO_IZQ_MANO_IZQ_0: THREE.Mesh
    MANO_DER_MANO_DER_0: THREE.Mesh
    TORNILLO_CABEZA_TORNILLO_CABEZA_0: THREE.Mesh
    HOMBRO_IZQ_HOMBRO_IZQ_0: THREE.Mesh
    HOMNRO_DER_HOMNRO_DER_0: THREE.Mesh
    OJO_OJO_0: THREE.Mesh
    OJO_1_OJO_1_0: THREE.Mesh
    CUERPO__CUERPO__0: THREE.Mesh
    PISO_PISO_0: THREE.Mesh
  }
  materials: {
    MANO_IZQ: THREE.MeshStandardMaterial
    MANO_DER: THREE.MeshStandardMaterial
    TORNILLO_CABEZA: THREE.MeshStandardMaterial
    HOMBRO_IZQ: THREE.MeshStandardMaterial
    HOMNRO_DER: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    OJO_1: THREE.MeshStandardMaterial
    CUERPO: THREE.MeshStandardMaterial
    PISO: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ActionName = 'CINEMA_4D_Principal'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

const context = createContext({} as ContextType)
export function Instances({ children, ...props }: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/bot_zun_animation_by_oscar_creativo-transformed.glb') as GLTFResult
  const instances = useMemo(
    () => ({
      MANOIZQMANOIZQ: nodes.MANO_IZQ_MANO_IZQ_0,
      MANODERMANODER: nodes.MANO_DER_MANO_DER_0,
      TORNILLOCABEZATORNILLOCABEZA: nodes.TORNILLO_CABEZA_TORNILLO_CABEZA_0,
      HOMBROIZQHOMBROIZQ: nodes.HOMBRO_IZQ_HOMBRO_IZQ_0,
      HOMNRODERHOMNRODER: nodes.HOMNRO_DER_HOMNRO_DER_0,
      OJOOJO: nodes.OJO_OJO_0,
      OJOOJO1: nodes.OJO_1_OJO_1_0,
      CUERPOCUERPO: nodes.CUERPO__CUERPO__0,
      PISOPISO: nodes.PISO_PISO_0,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances: ContextType) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const instances = useContext(context)
  const group = useRef<THREE.Group>()
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="RootNode">
          <group name="Nulo_" position={[0, -7.755, 3.109]}>
            <group name="MANO_IZQ" position={[-55.287, 34.915, -0.5]}>
              <instances.MANOIZQMANOIZQ name="MANO_IZQ_MANO_IZQ_0" />
            </group>
            <group name="MANO_DER" position={[54.225, 35.376, -0.263]}>
              <instances.MANODERMANODER name="MANO_DER_MANO_DER_0" />
            </group>
            <group name="TORNILLO_CABEZA" position={[0, 70.112, 0.092]}>
              <instances.TORNILLOCABEZATORNILLOCABEZA name="TORNILLO_CABEZA_TORNILLO_CABEZA_0" />
            </group>
            <group name="HOMBRO_IZQ" position={[-43.492, 35.439, -0.026]}>
              <instances.HOMBROIZQHOMBROIZQ name="HOMBRO_IZQ_HOMBRO_IZQ_0" />
            </group>
            <group name="HOMNRO_DER" position={[42.533, 34.02, -3.109]}>
              <instances.HOMNRODERHOMNRODER name="HOMNRO_DER_HOMNRO_DER_0" />
            </group>
            <group name="OJO" position={[14.132, 34.19, 43.244]}>
              <instances.OJOOJO name="OJO_OJO_0" />
            </group>
            <group name="OJO_1" position={[-17.524, 35.207, 41.548]}>
              <instances.OJOOJO1 name="OJO_1_OJO_1_0" />
            </group>
            <group name="CUERPO_" position={[0, 0.52, -3.109]}>
              <instances.CUERPOCUERPO name="CUERPO__CUERPO__0" />
            </group>
          </group>
          <group name="PISO" position={[0, -11.955, 0]}>
            <instances.PISOPISO name="PISO_PISO_0" />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/bot_zun_animation_by_oscar_creativo-transformed.glb')
