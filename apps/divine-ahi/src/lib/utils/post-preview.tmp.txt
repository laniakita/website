import Image from 'next/image';
import Link from 'next/link';
import dayjs, { extend } from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import { shimmer, toBase64 } from '@/lib/utils/shimmer-utils';
import { type FrontMatterDataObject } from '@/lib/utils/post-utils';
import { type PostHeaderProps } from '@/components/blog/post-header';
extend(relativeTime);

const accentTextColor = 'text-ctp-mauve';

export interface BaseProps {
  dataObj: FrontMatterDataObject;
}

export interface PreviewV2Props extends BaseProps {
  key?: string;
  baseUrl?: string;
  alt?: boolean;

  /*frontMatterData: {
    slug: string;
    headline: string;
    subheadline?: string;
    author?: string;
    category: string;
    date: string;
    assetFolder?: string;
    heroImage?: string;
    imgPlaceHolder?: string;
    heroAltText?: string;
    imgAnimClass?: string;
  };
  imgPlaceHolder: string;
  */

{ dataObj, alt }: { dataObj: PostHeaderProps; alt?: boolean }
  const postedDate = dayjs(dataObj.date).fromNow();
  //const keySplitter = dataObj.key.split('/');
  //const year = keySplitter[2];
  //const category = keySplitter[3];
  //const slug = keySplitter[4].split('.')[0];
  //const linkTo = `/blog/posts/${year}/${category}/${slug}`;
  //const linkToCat = `/blog/${category}`;

  const imageLoader = ({ src, width, quality }: { src?: string; width?: number; quality?: number }) => {
    return `/assets/featured-images/${src}?w=${width}&q=${quality || 50}`;
  };



 {/*
    <div
      className={`${alt ? 'flex size-full flex-col gap-6 pb-6 lg:flex-row-reverse lg:items-center lg:justify-between lg:pb-0' : 'flex size-full flex-col gap-6 overflow-hidden px-4 py-6'}  motion-safe:simple-color-trans pointer-events-none border-y border-ctp-surface0  bg-ctp-base hover:border-ctp-mauve  has-[:focus]:border-ctp-mauve md:gap-0 md:border md:p-0 dark:bg-ctp-crust`}
    >
      <Link
        href={linkTo}
        className={`${alt ? 'size-full h-[70vh] min-h-[30rem]' : 'flex min-h-96 items-center justify-center overflow-hidden rounded-2xl lg:h-[40vh] '} pointer-events-auto  relative border-ctp-surface0 motion-safe:[transition:_border_0.3s] md:rounded-none md:border-b`}
      >
        <Image
          loader={imageLoader}
          src={dataObj.heroImage}
          placeholder={`data:image/svg+xml;base64,${toBase64(shimmer(700, 475))}`}
          alt={dataObj.heroAltText}
          fill
          className={`object-cover transition-all `}
          sizes='(max-width: 300px) 100vw, (max-width: 600px) 50vw, 33vw'
          //placeholder="blur"
          //blurDataURL={dataObj.base64}
        />
      </Link>

      <div
        className={`${alt ? 'flex size-full flex-col justify-center px-4 md:p-10 lg:min-w-[50%] lg:max-w-[50%] 2xl:min-w-[33.33%] 2xl:max-w-[33.33%] 2xl:p-20' : 'md:p-10'}  flex flex-col gap-6`}
      >
        <div className='space-y-2'>
          <p>
            <Link
              href={linkToCat}
              className={`${alt ? 'text-xl' : ''} font-mono font-semibold ${accentTextColor} pointer-events-auto`}
            >
              {dataObj.category}
            </Link>
          </p>
          <h2>
            <Link
              id='post-title'
              href={linkTo}
              className={`${alt ? 'text-5xl md:text-6xl' : 'text-3xl md:text-4xl '} pointer-events-auto max-w-max flex-none text-wrap font-black uppercase text-ctp-text supports-[text-wrap:balance]:text-balance `}
            >
              {dataObj.headline}
            </Link>
          </h2>
          <h3
            className={alt ? 'text-2xl font-semibold supports-[text-wrap:pretty]:text-pretty md:text-3xl' : 'text-xl'}
          >
            {dataObj.subheadline}
          </h3>
        </div>
        <div className={`${alt ? 'text-lg' : ''} flex flex-row gap-2 font-mono text-base`}>
          <Link href='/about' className={`${alt ? '' : ''} pointer-events-auto w-fit font-semibold`}>
            <p>Lani</p>
          </Link>
          <span>|</span>
          <p>{postedDate}</p>
        </div>
      </div>
    </div>
    */}

